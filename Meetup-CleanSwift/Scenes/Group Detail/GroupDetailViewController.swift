//
//  GroupDetailViewController.swift
//  Meetup-CleanSwift
//
//  Created by Alejandro Orozco Builes on 11/11/18.
//  Copyright (c) 2018 Alejandro Orozco Builes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GroupDetailDisplayLogic: class
{
  func displayGroupDetail(viewModel: GroupDetail.ShowDetail.ViewModel)
}

class GroupDetailViewController: UIViewController, GroupDetailDisplayLogic
{
  var interactor: GroupDetailBusinessLogic?
  var router: (NSObjectProtocol & GroupDetailRoutingLogic & GroupDetailDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = GroupDetailInteractor()
    let presenter = GroupDetailPresenter()
    let router = GroupDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }

  // MARK: View lifecycle

  override var preferredStatusBarStyle : UIStatusBarStyle {
    return .lightContent
  }

  override func viewDidLoad()
  {
    super.viewDidLoad()
    interactor?.showGroupDetail()
  }

  // MARK: - Display Group Detail
  @IBOutlet weak var groupName: UILabel!
  @IBOutlet weak var groupImage: UIImageView!
  @IBOutlet weak var groupDescription: UITextView!
  @IBOutlet weak var salmonScrollView: UIScrollView!

  func displayGroupDetail(viewModel: GroupDetail.ShowDetail.ViewModel) {
    groupName.text = viewModel.name
    groupDescription.text = viewModel.description?.htmlToString
    groupImage.imageFromServerURL(urlString: viewModel.groupPhoto)
  }

  @IBAction func dismissGroupDetail(_ sender: Any) {
    navigationController?.popViewController(animated: true)
  }
}

extension GroupDetailViewController: Scaling {
  func scalingUILabel(transition: ScaleTransitionDelegate) -> UILabel? {
    return groupName
  }
  
  func scalingImageView(transition: ScaleTransitionDelegate) -> UIImageView? {
    return groupImage
  }
  
  func scalingContainerView(transition: ScaleTransitionDelegate) -> UIView? {
    return salmonScrollView
  }
}
