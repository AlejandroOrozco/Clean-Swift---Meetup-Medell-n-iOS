//
//  GroupModels.swift
//  Meetup-CleanSwift
//
//  Created by Alejandro Orozco Builes on 11/10/18.
//  Copyright (c) 2018 Alejandro Orozco Builes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Group
{
  // MARK: Use cases
  
  enum SearchGroup
  {
    struct Request: Codable
    {
      var text: String
      var photoHost = "public"
      var page = 20
      #error("Por favor pon tu APIKey(https://secure.meetup.com/es-ES/meetup_api/key/) de MeetupAPI en key y borra esta linea .")
      var key = ""
      var sign = "true"
      var radius = 100
      
      init(groupName: String) {
        text = groupName
      }
      
      enum CodingKeys: String, CodingKey {
        case text
        case photoHost = "photo-host"
        case page
        case key
        case sign
        case radius
      }
    }
    
    struct Response: Codable
    {
      var id: Int?
      var name: String?
      var city: String?
      var members: Int?
      var description: String?
      var groupLink: String?
      var groupPhoto: GroupPhoto?
      
      enum CodingKeys: String, CodingKey {
        case id
        case name
        case city
        case members
        case description
        case groupLink = "link"
        case groupPhoto = "group_photo"
      }
      
      struct GroupPhoto: Codable {
        var groupPhoto: String
        
        enum CodingKeys: String, CodingKey {
          case groupPhoto = "highres_link"
        }
        
      }
      
    }
    
    struct ViewModel
    {
      var id: Int?
      var name: String?
      var city: String?
      var members: Int?
      var description: String?
      var groupLink: String?
      var groupPhoto: String?
      
      init(response: Response) {
        id = response.id
        name = response.name
        city = response.city
        members = response.members
        description = response.description
        groupLink = response.groupLink
        groupPhoto = response.groupPhoto?.groupPhoto
      }
    }
    
  }
}
