//
//  GroupInteractor.swift
//  Meetup-CleanSwift
//
//  Created by Alejandro Orozco Builes on 11/10/18.
//  Copyright (c) 2018 Alejandro Orozco Builes. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GroupBusinessLogic
{
  func searchGroup(search: Group.SearchGroup.Request)
  func showGroup(group: Group.SearchGroup.ViewModel?)
}

protocol GroupDataStore
{
  var group: Group.SearchGroup.ViewModel? { get set }
}

class GroupInteractor: GroupBusinessLogic, GroupDataStore
{
  var group: Group.SearchGroup.ViewModel?
  var presenter: GroupPresentationLogic?
  var worker: GroupWorker?

  //MARK: - SearchGroup

  func searchGroup(search: Group.SearchGroup.Request) {
    worker = worker ?? GroupWorker()
    worker?.getGroups(with: search, completionHandler: { (response, error) in

      guard error == nil else {
        self.presenter?.presentMessage(messageType: .error)
        return
      }

      guard let response = response, !response.isEmpty else {
        self.presenter?.presentMessage(messageType: .notFound(forSearch: search.text))
        return
      }
      
      self.presenter?.presentGroups(response: response)
    })
  }

  func showGroup(group: Group.SearchGroup.ViewModel?) {
    if let group = group {
      self.group = group
      presenter?.presentGroupDetail()
    } else {
      presenter?.presentMessage(messageType: .error)
    }
  }

}
